// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
const tg = window.Telegram.WebApp;
tg.expand();
tg.BackButton.hide(); // –°–∫—Ä—ã–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∫–Ω–æ–ø–∫—É –ù–∞–∑–∞–¥, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ –Ω—É–∂–Ω–∞

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
const TARGET_WALLET = "0:89377d334e77ab890981dd864838594dc9fab1d1d7767551c83240621b627b6a";
const TONAPI_KEY = "AFRZNCR5WAER3PAAAAAK3QMOTEGWUDBAQHM6ENRCKMLK4GCPEKP2O362SZ4LGWIXAO7Q5PI";
const PANDAFIT_GAME_URL = "https://t.me/PandaFiT_bot/PandaFiT?startapp=rId444104761";

// DOM —ç–ª–µ–º–µ–Ω—Ç—ã
const usernameDisplayEl = document.getElementById('username-display');
const profilePhotoEl = document.getElementById('profile-photo');
const shortInfoEl = document.getElementById('short-info');
const donationsInfoEl = document.getElementById('donations-info');
const playGameBtn = document.getElementById('play-game');
const customButton1 = document.getElementById('custom-button-1');
const customButton2 = document.getElementById('custom-button-2');

// --- TON Connect --- 
const tonConnectUI = new TON_CONNECT_UI.TonConnectUI({
    manifestUrl: 'https://pfworld.vercel.app/tonconnect-manifest.json',
    buttonRootId: 'ton-connect-button', // ID —ç–ª–µ–º–µ–Ω—Ç–∞, –∫—É–¥–∞ –≤—Å—Ç–∞–≤–∏—Ç—Å—è –∫–Ω–æ–ø–∫–∞
    actionsConfiguration: {
        twaReturnUrl: `https://t.me/${tg.initDataUnsafe.bot_username}/${tg.initDataUnsafe.start_param}`
    }
});

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ Username –∏ –¥—Ä—É–≥–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ Telegram
function displayTelegramUserInfo() {
    if (tg.initDataUnsafe && tg.initDataUnsafe.user) {
        const user = tg.initDataUnsafe.user;
        usernameDisplayEl.textContent = user.username ? `@${user.username}` : `${user.first_name}${user.last_name ? ' ' + user.last_name : ''}`;
        // profilePhotoEl.style.backgroundImage = `url(${user.photo_url})`; // –ï—Å–ª–∏ –µ—Å—Ç—å photo_url –∏ —Ö–æ—Ç–∏–º –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
        // –î–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç
        profilePhotoEl.textContent = '–§–û–¢–û'; 
    } else {
        usernameDisplayEl.textContent = 'User';
        profilePhotoEl.textContent = '–§–û–¢–û';
    }
    // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –±–ª–æ–∫–∞ 7
    shortInfoEl.textContent = '–ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (–±–ª–æ–∫ 7)';
    // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –±–ª–æ–∫–∞ 8 (–¥–æ–Ω–∞—Ç—ã)
    donationsInfoEl.innerHTML = '<p>–ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–æ—à–µ–ª–µ–∫ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ–Ω–∞—Ç–æ–≤.</p>';
    // –ó–∞–≥–ª—É—à–∫–∞ (–∏–∫–æ–Ω–∫–∞) –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∏–≥—Ä—ã
    playGameBtn.innerHTML = 'üéÆ'; // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –∏–∫–æ–Ω–∫—É, —Ç–µ–∫—Å—Ç —É–¥–∞–ª–µ–Ω –∏–∑ HTML

}

// –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞
tonConnectUI.onStatusChange(async walletAndAccount => {
    if (walletAndAccount) {
        const friendlyAddress = TON_CONNECT_UI.toUserFriendlyAddress(walletAndAccount.account.address, walletAndAccount.account.chain === TON_CONNECT_UI.CHAIN.TESTNET);
        console.log('–ö–æ—à–µ–ª–µ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω:', friendlyAddress);
        localStorage.setItem('wallet', friendlyAddress);
        tg.sendData(JSON.stringify({ wallet: friendlyAddress })); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–æ—Ç—É
        console.log('–ö–æ—à–µ–ª–µ–∫ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ LS!');
        await checkDonations();
    } else {
        localStorage.removeItem('wallet');
        donationsInfoEl.innerHTML = '<p>–ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–æ—à–µ–ª–µ–∫ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ–Ω–∞—Ç–æ–≤.</p>';
        console.log('–ö–æ—à–µ–ª–µ–∫ –æ—Ç–∫–ª—é—á–µ–Ω.');
    }
});

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–æ–Ω–∞—Ç–∞–º–∏ (–æ—Å—Ç–∞–µ—Ç—Å—è –∫–∞–∫ –µ—Å—Ç—å, –Ω–æ —Ç–µ–ø–µ—Ä—å –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)
async function checkDonations() {
    const wallet = localStorage.getItem('wallet');
    if (!wallet) {
        donationsInfoEl.innerHTML = '<p>–î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–Ω–∞—Ç–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ—à–µ–ª–µ–∫.</p>';
        return;
    }
    donationsInfoEl.innerHTML = '<p>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ –¥–æ–Ω–∞—Ç–∞—Ö...</p>';
    try {
        const response = await fetch(`https://tonapi.io/v2/blockchain/accounts/${wallet}/transactions?limit=200`, {
            headers: { 'Authorization': `Bearer ${TONAPI_KEY}` }
        });
        if (!response.ok) throw new Error(`API Error: ${response.status}`);
        const data = await response.json();
        const transactions = data.transactions || [];
        let total = 0;
        const monthly = {};
        if (transactions.length === 0) {
            displayDonations(total, monthly, true);
            return;
        }
        transactions.forEach(tx => {
            tx.out_msgs?.forEach(msg => {
                if (msg.destination?.address === TARGET_WALLET) {
                    const value = parseInt(msg.value) / 1e9;
                    const date = new Date(tx.utime * 1000);
                    const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;
                    total += value;
                    monthly[monthKey] = (monthly[monthKey] || 0) + value;
                }
            });
        });
        displayDonations(total, monthly);
    } catch (error) {
        donationsInfoEl.innerHTML = '<p>–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –¥–æ–Ω–∞—Ç–∞—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.</p>';
        console.error('Error checking donations:', error);
    }
}

function displayDonations(total, monthly, noTransactions = false) {
    const monthNames = {
        '01': '–Ø–Ω–≤–∞—Ä—å', '02': '–§–µ–≤—Ä–∞–ª—å', '03': '–ú–∞—Ä—Ç', '04': '–ê–ø—Ä–µ–ª—å',
        '05': '–ú–∞–π', '06': '–ò—é–Ω—å', '07': '–ò—é–ª—å', '08': '–ê–≤–≥—É—Å—Ç',
        '09': '–°–µ–Ω—Ç—è–±—Ä—å', '10': '–û–∫—Ç—è–±—Ä—å', '11': '–ù–æ—è–±—Ä—å', '12': '–î–µ–∫–∞–±—Ä—å'
    };
    if (noTransactions && total === 0) {
        donationsInfoEl.innerHTML = '<p>–î–æ–Ω–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è —ç—Ç–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞.</p>';
        return;
    }
    let html = `<p>–û–±—â–∏–π –¥–æ–Ω–∞—Ç: <b>${total.toFixed(2)} TON</b></p>`;
    if (Object.keys(monthly).length > 0) {
      html += '<h3>–î–æ–Ω–∞—Ç—ã –ø–æ –º–µ—Å—è—Ü–∞–º:</h3>';
      Object.entries(monthly)
          .sort(([a], [b]) => b.localeCompare(a))
          .forEach(([month, amount]) => {
              const [year, monthNum] = month.split('-');
              html += `<p>${year} ${monthNames[monthNum]} ‚Äî ${amount.toFixed(2)} TON</p>`;
          });
    } else if (total > 0) {
      html += '<p>–î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ –º–µ—Å—è—Ü–∞–º –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.</p>';
    } else {
      html += '<p>–î–æ–Ω–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.</p>'; // –ï—Å–ª–∏ total 0 –∏ –Ω–µ –±—ã–ª–æ —Ñ–ª–∞–≥–∞ noTransactions
    }
    donationsInfoEl.innerHTML = html;
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫ (–ø–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å)
customButton1.addEventListener('click', () => console.log('Custom Button 1 (–ö–Ω–æ–ø–∫–∞ 5) clicked'));
customButton2.addEventListener('click', () => console.log('Custom Button 2 (–ö–Ω–æ–ø–∫–∞ 6) clicked'));

playGameBtn.addEventListener('click', () => {
    tg.openTelegramLink(PANDAFIT_GAME_URL);
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', () => {
    tg.ready(); // –°–æ–æ–±—â–∞–µ–º Telegram, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ
    displayTelegramUserInfo();
    // TonConnectUI —Å–∞–º –ø–æ–ø—ã—Ç–∞–µ—Ç—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Å—Å–∏—é –∏ –≤—ã–∑–æ–≤–µ—Ç onStatusChange,
    // –∫–æ—Ç–æ—Ä—ã–π –≤ —Å–≤–æ—é –æ—á–µ—Ä–µ–¥—å –≤—ã–∑–æ–≤–µ—Ç checkDonations –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏.
}); 