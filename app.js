// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
const tg = window.Telegram.WebApp;
tg.expand();
tg.BackButton.hide();
tg.enableClosingConfirmation(); // –ó–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
const TARGET_WALLET = "0:89377d334e77ab890981dd864838594dc9fab1d1d7767551c83240621b627b6a";
const TONAPI_KEY = "AFRZNCR5WAER3PAAAAAK3QMOTEGWUDBAQHM6ENRCKMLK4GCPEKP2O362SZ4LGWIXAO7Q5PI";
const PANDAFIT_GAME_URL = "https://t.me/PandaFiT_bot/PandaFiT?startapp=rId444104761";

// DOM —ç–ª–µ–º–µ–Ω—Ç—ã
const headerWalletAreaEl = document.getElementById('header-wallet-area');
const tonConnectButtonHeaderEl = document.getElementById('ton-connect-button-header');
const userInfoHeaderEl = document.getElementById('user-info-header');
const usernameDisplayEl = document.getElementById('username-display');
const walletAddressDisplayEl = document.getElementById('wallet-address-display');
const menuButtonEl = document.getElementById('menu-button');

const profilePhotoEl = document.getElementById('profile-photo');
const shortInfoEl = document.getElementById('short-info');
const donationsInfoEl = document.getElementById('donations-info');

const playGameBtn = document.getElementById('play-game');
const customButton1 = document.getElementById('custom-button-1');
const customButton2 = document.getElementById('custom-button-2');

const popupMenuEl = document.getElementById('popup-menu');
const disconnectWalletButtonEl = document.getElementById('disconnect-wallet-button');
const closeMenuButtonEl = document.getElementById('close-menu-button');

const profilePhotoClickable = document.getElementById('profile-photo-clickable');
const rulesModal = document.getElementById('rules-modal');
const closeRulesModal = document.getElementById('close-rules-modal');

const userStatusDisplay = document.getElementById('user-status');
const daysInGameDisplay = document.getElementById('days-in-game');
const totalContributedDisplay = document.getElementById('total-contributed');
const userRankDisplay = document.getElementById('user-rank');
const donationsBlock = document.getElementById('donations-block');
const donationsPlaceholder = document.getElementById('donations-placeholder');

const mainView = document.getElementById('main-view');
const mainFooter = document.getElementById('main-footer');
const statsPage = document.getElementById('stats-page');
const ratingPage = document.getElementById('rating-page');
const buttonStats = document.getElementById('button-stats');
const buttonRating = document.getElementById('button-rating');
const backButtons = document.querySelectorAll('.back-button');

// --- TON Connect --- 
const tonConnectUI = new TON_CONNECT_UI.TonConnectUI({
    manifestUrl: 'https://pfworld.vercel.app/tonconnect-manifest.json',
    buttonRootId: 'ton-connect-button-header'
});

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ UI –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞
function updateUiOnWalletStateChange(wallet) {
    if (wallet) {
        const address = wallet.account.address;
        const userFriendlyAddress = `${address.substring(0, 4)}...${address.substring(address.length - 4)}`;
        walletAddressDisplayEl.textContent = userFriendlyAddress;
        userInfoHeaderEl.style.display = 'flex';
        tonConnectButtonHeaderEl.style.display = 'none';
        menuButtonEl.style.display = 'flex';
        donationsPlaceholder.style.display = 'none'; // –°–∫—Ä—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
        donationsBlock.innerHTML = ''; // –û—á–∏—â–∞–µ–º –Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ —Ç–∞–º —á—Ç–æ-—Ç–æ –±—ã–ª–æ
        checkDonations(address); // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–æ–Ω–∞—Ç—ã –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –∏–Ω—Ñ—É
    } else {
        walletAddressDisplayEl.textContent = '';
        userInfoHeaderEl.style.display = 'none';
        tonConnectButtonHeaderEl.style.display = 'flex';
        menuButtonEl.style.display = 'none';
        clearAllInfo(); // –û—á–∏—â–∞–µ–º –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä–∏ –æ—Ç–≤—è–∑–∫–µ
        donationsPlaceholder.style.display = 'block'; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ Username –∏ –¥—Ä—É–≥–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ Telegram
function displayTelegramUserInfo() {
    if (tg.initDataUnsafe && tg.initDataUnsafe.user) {
        const user = tg.initDataUnsafe.user;
        usernameDisplayEl.textContent = user.username ? `@${user.username}` : `${user.first_name}${user.last_name ? ' ' + user.last_name : ''}`;
    } else {
        usernameDisplayEl.textContent = 'User';
    }
    shortInfoEl.textContent = '–ò–Ω—Ñ–æ (–±–ª–æ–∫ 7)'; 
    playGameBtn.innerHTML = 'üéÆ'; 
}

// –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞
tonConnectUI.onStatusChange(updateUiOnWalletStateChange);

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–æ–Ω–∞—Ç–∞–º–∏ (–≤ —Ü–µ–ª–æ–º –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, –∫—Ä–æ–º–µ –≤—ã–∑–æ–≤–∞)
async function checkDonations(walletAddress) {
    if (!walletAddress) {
        console.log('Wallet address is not set.');
        donationsBlock.innerHTML = '<p>–ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.</p>';
        return;
    }
    // donationsBlock.innerHTML = '<p>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–Ω–∞—Ç–æ–≤...</p>'; // –£–±–∏—Ä–∞–µ–º, —Ç.–∫. –±–ª–æ–∫ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—É—Å—Ç—ã–º

    try {
        const response = await fetch(`https://tonapi.io/v2/blockchain/accounts/${walletAddress}/transactions?limit=1000`, {
            headers: {
                'Authorization': 'Bearer AFRZNCR5WAER3PAAAAAK3QMOTEGWUDBAQHM6ENRCKMLK4GCPEKP2O362SZ4LGWIXAO7Q5PI'
            }
        });
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        const data = await response.json();
        const transactions = data.transactions || [];
        
        let totalDonation = 0;
        const targetWallet = "0:89377d334e77ab890981dd864838594dc9fab1d1d7767551c83240621b627b6a".toLowerCase(); // –ê–¥—Ä–µ—Å —Ü–µ–ª–µ–≤–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞
        let firstDonationDate = null;

        transactions.forEach(tx => {
            if (tx.out_msgs) {
                tx.out_msgs.forEach(msg => {
                    if (msg.destination && msg.destination.address.toLowerCase() === targetWallet) {
                        const valueInTon = parseInt(msg.value) / 1000000000;
                        totalDonation += valueInTon;
                        if (!firstDonationDate || tx.utime < firstDonationDate) {
                            firstDonationDate = tx.utime;
                        }
                    }
                });
            }
        });

        // donationsBlock —Ç–µ–ø–µ—Ä—å –ø—É—Å—Ç–æ–π, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–π–¥–µ—Ç –≤ short-info-area
        updateExtendedInfo(transactions, totalDonation, firstDonationDate);

    } catch (error) {
        console.error('Error fetching donations:', error);
        donationsBlock.innerHTML = '<p>–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–æ–Ω–∞—Ç–æ–≤.</p>';
         updateExtendedInfo([], 0, null); // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ —Å –Ω—É–ª–µ–≤—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ
    }
}

function getStatus(totalDonation) {
    if (totalDonation <= 0.3) return "–ù–æ–≤–µ–Ω—å–∫–∏–π";
    if (totalDonation <= 5) return "–û—Å–≤–∞–∏–≤–∞—é—Å—å";
    if (totalDonation <= 50) return "–ù–∞–±–∏—Ä–∞—é –æ–±–æ—Ä–æ—Ç—ã";
    if (totalDonation <= 200) return "–°–µ—Ä—å—ë–∑–Ω—ã–π –∏–Ω–≤–µ—Å—Ç–æ—Ä";
    if (totalDonation <= 500) return "–í–∏–ø-–º–µ—Ü–µ–Ω–∞—Ç";
    if (totalDonation <= 1000) return "–¢–û–ù–æ–≤—ã–π –º–∞–≥–Ω–∞—Ç";
    return "–ë–æ—Å—Å TON-–≤—Å–µ–ª–µ–Ω–Ω–æ–π";
}

function getDaysInGame(firstTransactionTimestamp) {
    if (!firstTransactionTimestamp) return '...';
    const firstDate = new Date(firstTransactionTimestamp * 1000);
    const today = new Date();
    const diffTime = Math.abs(today - firstDate);
    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
    return diffDays;
}

function updateExtendedInfo(transactions, totalDonation, firstDonationTimestamp) {
    userStatusDisplay.textContent = getStatus(totalDonation);
    daysInGameDisplay.textContent = getDaysInGame(firstDonationTimestamp);
    totalContributedDisplay.textContent = totalDonation.toFixed(2);
    userRankDisplay.textContent = 'N/A (–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö)'; // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ä–µ–π—Ç–∏–Ω–≥–∞
    
    // –ï—Å–ª–∏ –∫–æ—à–µ–ª–µ–∫ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∏–ª–∏ –Ω–µ—Ç –¥–æ–Ω–∞—Ç–æ–≤, –≤ donationsBlock –±—É–¥–µ—Ç –∑–∞–≥–ª—É—à–∫–∞
    if (!tonConnectUI.wallet) {
         donationsPlaceholder.style.display = 'block';
         donationsBlock.innerHTML = '';
    } else if (transactions.length === 0 && totalDonation === 0) {
        donationsBlock.innerHTML = '<p>–î–æ–Ω–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.</p>';
        donationsPlaceholder.style.display = 'none';
    } else {
        donationsBlock.innerHTML = ''; // –û—Å—Ç–∞–≤–ª—è–µ–º –ø—É—Å—Ç—ã–º —Å–æ–≥–ª–∞—Å–Ω–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é
        donationsPlaceholder.style.display = 'none';
    }
}

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–ø–ª—ã–≤–∞—é—â–∏–º –º–µ–Ω—é
menuButtonEl.addEventListener('click', () => {
    popupMenuEl.style.display = 'flex';
});

closeMenuButtonEl.addEventListener('click', () => {
    popupMenuEl.style.display = 'none';
});

disconnectWalletButtonEl.addEventListener('click', () => {
    tonConnectUI.disconnect();
    popupMenuEl.style.display = 'none';
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
customButton1.addEventListener('click', () => console.log('Custom Button 1 (–ö–Ω–æ–ø–∫–∞ 5) clicked'));
customButton2.addEventListener('click', () => console.log('Custom Button 2 (–ö–Ω–æ–ø–∫–∞ 6) clicked'));
playGameBtn.addEventListener('click', () => tg.openTelegramLink(PANDAFIT_GAME_URL));

// --- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ Views ---
function showView(viewId) {
    mainView.style.display = 'none';
    mainFooter.style.display = 'none';
    statsPage.style.display = 'none';
    ratingPage.style.display = 'none';

    const viewToShow = document.getElementById(viewId);
    if (viewToShow) {
        viewToShow.style.display = 'flex'; // –∏–ª–∏ 'block' –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç page-view CSS
        if (viewId === 'main-view') {
             mainFooter.style.display = 'flex';
        }
    }
}

buttonStats.addEventListener('click', () => showView('stats-page'));
buttonRating.addEventListener('click', () => showView('rating-page'));
backButtons.forEach(button => {
    button.addEventListener('click', () => showView(button.dataset.target));
});

// --- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∞–≤–∏–ª ---
profilePhotoClickable.addEventListener('click', () => {
    rulesModal.style.display = 'flex';
});
closeRulesModal.addEventListener('click', () => {
    rulesModal.style.display = 'none';
});
rulesModal.addEventListener('click', (event) => { // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –Ω–∞ —Ñ–æ–Ω
    if (event.target === rulesModal) {
        rulesModal.style.display = 'none';
    }
});

// --- –ú–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
popupMenuEl.addEventListener('click', (event) => { // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –Ω–∞ —Ñ–æ–Ω
    if (event.target === popupMenuEl) {
        popupMenuEl.style.display = 'none';
    }
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', () => {
    tg.ready();
    displayTelegramUserInfo();
    // –ü—Ä–æ–≤–µ—Ä–∫–∞, –±—ã–ª –ª–∏ –∫–æ—à–µ–ª–µ–∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
    tonConnectUI.connectionRestored.then(restored => {
        if (restored) {
            updateUiOnWalletStateChange(tonConnectUI.wallet);
            console.log('Connection restored.');
        } else {
            console.log('Connection not restored or new session.');
            updateUiOnWalletStateChange(null); // –£–±–µ–¥–∏–º—Å—è —á—Ç–æ UI –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–µ–∑ –∫–æ—à–µ–ª—å–∫–∞
        }
    });
});

function clearAllInfo() {
    userStatusDisplay.textContent = '...';
    daysInGameDisplay.textContent = '...';
    totalContributedDisplay.textContent = '...';
    userRankDisplay.textContent = '...';
    donationsBlock.innerHTML = ''; // –û—á–∏—â–∞–µ–º –±–ª–æ–∫ –¥–æ–Ω–∞—Ç–æ–≤ (–±—ã–≤—à–∞—è –º–µ—Å—è—á–Ω–∞—è —Ä–∞–∑–±–∏–≤–∫–∞)
    donationsPlaceholder.style.display = 'block';
} 